version: '3'

services:
  nginx:
    image: nginx
    ports:
      - "${NGINX_PORT}:80"
      # - "443:443"  # Uncomment for HTTPS
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ./nginx/ssl:/etc/nginx/ssl  # Uncomment for HTTPS certificates
    depends_on:
      - nestfinderapiservice
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  nestfinderapiservice:
    image: nestfinderapiservice
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_ENV: ${APP_ENV}
    environment:
      APP_ENV: ${APP_ENV}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: yarn start
    ports:
      - ${PORT}
    depends_on:
      - redis
    restart: unless-stopped    # Add restart policy for production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - ${REDIS_PORT}
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: app-network:redis:${REDIS_PORT}
    ports:
      - "${REDIS_UI_PORT}:8081"
    depends_on:
      - redis
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
